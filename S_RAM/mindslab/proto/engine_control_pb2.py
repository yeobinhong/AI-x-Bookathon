# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/engine_control.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/engine_control.proto',
  package='maum.brain',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1aproto/engine_control.proto\x12\nmaum.brain\"i\n\x0e\x43ontrolRequest\x12.\n\x0binstruction\x18\x01 \x01(\x0e\x32\x19.maum.brain.EngineControl\x12\x13\n\x0b\x63onfig_path\x18\x02 \x01(\t\x12\x12\n\ninfer_text\x18\x03 \x01(\t\"_\n\x0f\x43ontrolResponse\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.maum.brain.EngineStatus\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x15\n\rinfer_results\x18\x03 \x03(\t*J\n\x0c\x45ngineStatus\x12\x08\n\x04IDLE\x10\x00\x12\x0c\n\x08TRAINING\x10\x01\x12\r\n\tINFERRING\x10\x02\x12\x13\n\x0fINVALID_REQUEST\x10\x0f*^\n\rEngineControl\x12\x10\n\x0c\x43HECK_STATUS\x10\x00\x12\x12\n\x0eSTART_TRAINING\x10\x01\x12\x13\n\x0fSTART_INFERRING\x10\x02\x12\x12\n\x0eSTOP_OPERATION\x10\x03\x32\\\n\x10\x45ngineController\x12H\n\rControlEngine\x12\x1a.maum.brain.ControlRequest\x1a\x1b.maum.brain.ControlResponseb\x06proto3')
)

_ENGINESTATUS = _descriptor.EnumDescriptor(
  name='EngineStatus',
  full_name='maum.brain.EngineStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IDLE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRAINING', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INFERRING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_REQUEST', index=3, number=15,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=246,
  serialized_end=320,
)
_sym_db.RegisterEnumDescriptor(_ENGINESTATUS)

EngineStatus = enum_type_wrapper.EnumTypeWrapper(_ENGINESTATUS)
_ENGINECONTROL = _descriptor.EnumDescriptor(
  name='EngineControl',
  full_name='maum.brain.EngineControl',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CHECK_STATUS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='START_TRAINING', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='START_INFERRING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOP_OPERATION', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=322,
  serialized_end=416,
)
_sym_db.RegisterEnumDescriptor(_ENGINECONTROL)

EngineControl = enum_type_wrapper.EnumTypeWrapper(_ENGINECONTROL)
IDLE = 0
TRAINING = 1
INFERRING = 2
INVALID_REQUEST = 15
CHECK_STATUS = 0
START_TRAINING = 1
START_INFERRING = 2
STOP_OPERATION = 3



_CONTROLREQUEST = _descriptor.Descriptor(
  name='ControlRequest',
  full_name='maum.brain.ControlRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instruction', full_name='maum.brain.ControlRequest.instruction', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='config_path', full_name='maum.brain.ControlRequest.config_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='infer_text', full_name='maum.brain.ControlRequest.infer_text', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=147,
)


_CONTROLRESPONSE = _descriptor.Descriptor(
  name='ControlResponse',
  full_name='maum.brain.ControlResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='maum.brain.ControlResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='msg', full_name='maum.brain.ControlResponse.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='infer_results', full_name='maum.brain.ControlResponse.infer_results', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=149,
  serialized_end=244,
)

_CONTROLREQUEST.fields_by_name['instruction'].enum_type = _ENGINECONTROL
_CONTROLRESPONSE.fields_by_name['status'].enum_type = _ENGINESTATUS
DESCRIPTOR.message_types_by_name['ControlRequest'] = _CONTROLREQUEST
DESCRIPTOR.message_types_by_name['ControlResponse'] = _CONTROLRESPONSE
DESCRIPTOR.enum_types_by_name['EngineStatus'] = _ENGINESTATUS
DESCRIPTOR.enum_types_by_name['EngineControl'] = _ENGINECONTROL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ControlRequest = _reflection.GeneratedProtocolMessageType('ControlRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLREQUEST,
  __module__ = 'proto.engine_control_pb2'
  # @@protoc_insertion_point(class_scope:maum.brain.ControlRequest)
  ))
_sym_db.RegisterMessage(ControlRequest)

ControlResponse = _reflection.GeneratedProtocolMessageType('ControlResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLRESPONSE,
  __module__ = 'proto.engine_control_pb2'
  # @@protoc_insertion_point(class_scope:maum.brain.ControlResponse)
  ))
_sym_db.RegisterMessage(ControlResponse)



_ENGINECONTROLLER = _descriptor.ServiceDescriptor(
  name='EngineController',
  full_name='maum.brain.EngineController',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=418,
  serialized_end=510,
  methods=[
  _descriptor.MethodDescriptor(
    name='ControlEngine',
    full_name='maum.brain.EngineController.ControlEngine',
    index=0,
    containing_service=None,
    input_type=_CONTROLREQUEST,
    output_type=_CONTROLRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ENGINECONTROLLER)

DESCRIPTOR.services_by_name['EngineController'] = _ENGINECONTROLLER

# @@protoc_insertion_point(module_scope)
