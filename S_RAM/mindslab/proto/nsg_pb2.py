# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/nsg.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/nsg.proto',
  package='gpt.nsg',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0fproto/nsg.proto\x12\x07gpt.nsg\"<\n\tInputText\x12\x0f\n\x07\x63ontext\x18\x01 \x01(\t\x12\x0f\n\x07subject\x18\x02 \x01(\t\x12\r\n\x05\x63ount\x18\x03 \x01(\x05\"\x1a\n\x07Outputs\x12\x0f\n\x07gentext\x18\x01 \x01(\t29\n\nGptTextGen\x12+\n\x03Gen\x12\x12.gpt.nsg.InputText\x1a\x10.gpt.nsg.Outputsb\x06proto3')
)




_INPUTTEXT = _descriptor.Descriptor(
  name='InputText',
  full_name='gpt.nsg.InputText',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='gpt.nsg.InputText.context', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subject', full_name='gpt.nsg.InputText.subject', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='gpt.nsg.InputText.count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=88,
)


_OUTPUTS = _descriptor.Descriptor(
  name='Outputs',
  full_name='gpt.nsg.Outputs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='gentext', full_name='gpt.nsg.Outputs.gentext', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=116,
)

DESCRIPTOR.message_types_by_name['InputText'] = _INPUTTEXT
DESCRIPTOR.message_types_by_name['Outputs'] = _OUTPUTS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InputText = _reflection.GeneratedProtocolMessageType('InputText', (_message.Message,), dict(
  DESCRIPTOR = _INPUTTEXT,
  __module__ = 'proto.nsg_pb2'
  # @@protoc_insertion_point(class_scope:gpt.nsg.InputText)
  ))
_sym_db.RegisterMessage(InputText)

Outputs = _reflection.GeneratedProtocolMessageType('Outputs', (_message.Message,), dict(
  DESCRIPTOR = _OUTPUTS,
  __module__ = 'proto.nsg_pb2'
  # @@protoc_insertion_point(class_scope:gpt.nsg.Outputs)
  ))
_sym_db.RegisterMessage(Outputs)



_GPTTEXTGEN = _descriptor.ServiceDescriptor(
  name='GptTextGen',
  full_name='gpt.nsg.GptTextGen',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=118,
  serialized_end=175,
  methods=[
  _descriptor.MethodDescriptor(
    name='Gen',
    full_name='gpt.nsg.GptTextGen.Gen',
    index=0,
    containing_service=None,
    input_type=_INPUTTEXT,
    output_type=_OUTPUTS,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GPTTEXTGEN)

DESCRIPTOR.services_by_name['GptTextGen'] = _GPTTEXTGEN

# @@protoc_insertion_point(module_scope)
